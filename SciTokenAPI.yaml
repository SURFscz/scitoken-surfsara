openapi: 3.0.0
info:
  title: SciToken API
  description: |
    API definition for generating, verifying and consuming Scitokens
  version: 0.1-beta
paths:
  /oauth2RefreshToken:
    post:
      summary: |
        Request user's consent/authorization or if done already obtain a refresh token
      description: |
        The user is forwarded to the consent screen for the first time. Then a refresh token is requested by using the authorization code after consent screen
      tags:
        - oauth2
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                username:
                  description: |
                    Username over which a refresh token (long-lived) is obtained
                  type: string
                redirect_uri:
                  description: |
                    The redirect URI for the OAuth2 server 
                  type: string
                oauth2_srvname:
                  description: |
                    OAuth2 Provider identifier to choose client details (default 'Local')
                  type: string
                state:
                  description: |
                    An (optional) State parameter for the OAuth2 client-server communication 
                  type: string     
                authz_code:
                  description: |
                    The authorization code obtained after consent 
                  type: string   
              required:
                - 'username, redirect_uri, oauth2_srvname'
      responses:
        '303':
          description: |
            Redirect to the consent screen for the refresh token
        '200':
          description: |
            The refresh token for the user 
          content:
            application/json:
              schema:
                type: string
    get:
      summary: |
         Request user's consent/authorization 
      description: >
        The user is forwarded to the consent screen for the first time. Then a refresh token is requested by using the authorization code after consent screen. Since Authorization code is one time use, we allow GET as well
      tags:
        - oauth2
      parameters:
        - in: query
          name: username
          schema:
            type: string
          required: true
          description: |
              Username over which a refresh token (long-lived) is obtained
        - in: query
          name: redirect_uri
          schema:
            type: string
          required: true
          description: |
              The redirect URI for the OAuth2 server 
        - in: query
          name: oauth2_srvname
          schema:
            type: string
          required: true
          description: |
              OAuth2 Provider identifier to choose client details (default local)      
        - in: query
          name: state
          schema:
            type: string
          required: true
          description: |
              An (optional) State parameter for the OAuth2 client-server communication 
        - in: query
          name: authz_code
          schema:
            type: string
          required: true
          description: |
              The authorization code obtained after consent 
      responses:
        '303':
          description: |
            Redirect to the consent screen for the refresh token
        '200':
          description: A refresh token
          content:
            application/json:
              schema:
                type: string
  /scitokens:
    post:
      summary: |
        Generate a scitoken
      description: |
        Given the refresh token, a Scitoken is generated.
      tags:
        - scitoken
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                parent_token:
                  description: |
                    The parent token that will be used to generate
                  type: string
                refresh_token:
                  description: >
                    The refresh token to be used (i.e. validated) for generating
                    the scitoken
                  type: string
                claims:
                  description: >
                    List of claims (key/value pairs) to be added to the newly generated Scitoken
                  type: object
                  additionalProperties:
                    type: string
      responses:
        '200':
          description: A scitoken
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: string
                example:
                  result: SERIALIZED_SCITOKEN
  /resource:
    post:
      summary: |
        Access to a resource
      description: |
        Given the scitoken, the access to a sensitive resource is checked (Enforcement).
      tags:
        - enforcement
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:  
                token:
                  description: |
                    The scitoken used to access to the resource
                  type: string
                act:
                  description: |
                    The action to be performed (whether it is contained in the available claims of the scitoken, 'scp' claim)
                  type: string
                id:
                  description: |
                    The ID of the resource
                  type: string  
      responses:
        '200':
          description: A scitoken
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                    type: string
                example:
                  scp: read
                  aud: Localhost
                  exp: string/float
                  and: more
  /scitokenval:
    post:
      summary: |
        Validate a scitoken
      description: |
        Validate the claims of the given scitoken by using custom functions (since validation of registered claims already happens at the basic level)
      tags:
        - scitoken
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:  
                token:
                  description: |
                    The scitoken used to access to the resource
                  type: string
      responses:
        '200':
          description: A scitoken
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                    type: boolean
                example:
                  result: True
                 